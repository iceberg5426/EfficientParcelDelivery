[General]
#scheduler-class = "inet::cRealTimeScheduler" #so that speed appears realistic
#debug-on-errors = true
#tkenv-plugin-path = ../../../etc/plugins
#tkenv-default-run=1

sim-time-limit = 10day

**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 400m
**.constraintAreaMaxZ = 0m
#**.updateInterval = 0.1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.updateInterval = 0.2s # test with 0s too, and let getCurrentPosition update the display string from a test module



###(240615)###### 0.CDPF  1.CNPF  2. TSP_BnB  3.EPDS  4.RSPF 5.HPF  ##########
######### 0.RSPF  1.CNPF  2.HPF  3.CDPF  4.EPDS  5.TSP_BnB ##########


###(240615)###### 0.CDPF  1.CNPF  2. TSP_BnB  3.EPDS  4.RSPF 5.HPF  ##########
[Config CDPF]                     #Efficient Parcel Delivery Service Bien Aime Configuration#
network = ParcelDeliveryNetwork

description = "1 drones, 10 destinations, 100 parcels, "
*.numdrones = 1       # number of drones
**.drone*.mobility.typename = "DroneNetMob"
**.drone[*].mobility.ndst = 6   # number of destination
**.drone[*].mobility.nd = 8
**.drone[*].mobility.npar = 100  # number of parcels

**.drone[*].mobility.initFromDisplayString = false
**.drone[*].mobility.changeInterval = truncnormal(2s, 0.5s)
**.drone[*].mobility.angleDelta = normal(0deg, 30deg)
#**.drone[*].mobility.speed = truncnormal(15mps, 5mps)
**.drone[*].mobility.speed = 10mps
**.drone[*].mobility.remainingBattery = 480

# the Maximum delivery capacity of drone.   but for the realistic and various simulation, we can assume that drone have various capacity of delivery parcel weight.
#**.drone[*].mobility.weightCapacity = 25  
#Invalid value: But to run with 1 drone and navigate to all destinations. 0610 
**.drone[*].mobility.weightCapacity = 100
**.drone[*].mobility.parcelSelectionMethod = 0           
**.drone[*].mobility.initialX = 0m
**.drone[*].mobility.initialY = 0m
**.drone[*].mobility.initialZ = 0m




###(240615)###### 0.CDPF  1.CNPF  2. TSP_BnB  3.EPDS  4.RSPF 5.HPF  ##########
[Config CNPF_greedy]                     #Efficient Parcel Delivery Service Bien Aime Configuration#
network = ParcelDeliveryNetwork

description = "1 drones, 6 destinations, 20 parcels, max weight 10(total < 50)"
*.numdrones = 1       # number of drones
**.drone*.mobility.typename = "DroneNetMob"
**.drone[*].mobility.ndst = 6   # number of destination
#**.drone[*].mobility.nd = 8
**.drone[*].mobility.npar = 20 # number of parcels

**.drone[*].mobility.initFromDisplayString = false
**.drone[*].mobility.changeInterval = truncnormal(2s, 0.5s)
**.drone[*].mobility.angleDelta = normal(0deg, 30deg)

#rotationAxisAngle 은 설정해야 되지 않는가?

#**.drone[*].mobility.speed = truncnormal(15mps, 5mps)
**.drone[*].mobility.speed = 10mps
# the Maximum delivery capacity of drone.   but for the realistic and various simulation, we can assume that drone have various capacity of delivery parcel weight.
**.drone[*].mobility.weightCapacity = 30
**.drone[*].mobility.remainingBattery = 480
**.drone[*].mobility.parcelSelectionMethod = 1           
**.drone[*].mobility.initialX = 0m
**.drone[*].mobility.initialY = 0m
**.drone[*].mobility.initialZ = 0m



###(240615)###### 0.CDPF  1.CNPF  2. TSP_BnB  3.EPDS  4.RSPF 5.HPF  ##########
[Config TSP_BnB]                     #Efficient Parcel Delivery Service Bien Aime Configuration#
network = ParcelDeliveryNetwork

description = "1 drones, 6 destinations, 20 parcels, "
*.numdrones = 1       # number of drones
**.drone*.mobility.typename = "DroneNetMob"
**.drone[*].mobility.ndst = 6   # number of destination
#**.drone[*].mobility.nd = 8
**.drone[*].mobility.npar = 20 # number of parcels

**.drone[*].mobility.initFromDisplayString = false
**.drone[*].mobility.changeInterval = truncnormal(2s, 0.5s)
**.drone[*].mobility.angleDelta = normal(0deg, 30deg)
#**.drone[*].mobility.speed = truncnormal(15mps, 5mps)
**.drone[*].mobility.speed = 10mps
**.drone[*].mobility.remainingBattery = 480

# the Maximum delivery capacity of drone.   but for the realistic and various simulation, we can assume that drone have various capacity of delivery parcel weight.
#**.drone[*].mobility.weightCapacity = 25  
#Invalid value: But to run with 1 drone and navigate to all destinations. 0610 
**.drone[*].mobility.weightCapacity = 30
**.drone[*].mobility.parcelSelectionMethod = 2         
**.drone[*].mobility.initialX = 0m
**.drone[*].mobility.initialY = 0m
**.drone[*].mobility.initialZ = 0m





###(240615)###### 0.CDPF  1.CNPF  2. TSP_BnB  3.EPDS  4.RSPF 5.HPF  ##########
[Config EPDS]                     #Efficient Parcel Delivery Service Bien Aime Configuration#
network = ParcelDeliveryNetwork

description = "1 drones, 10 destinations, 100 parcels, "
*.numdrones = 1
**.drone*.mobility.typename = "DroneNetMob"
**.drone[*].mobility.ndst = 10
**.drone[*].mobility.nd = 8
**.drone[*].mobility.npar = 100  # number of parcels


**.drone[*].mobility.initFromDisplayString = false
**.drone[*].mobility.changeInterval = truncnormal(2s, 0.5s)
**.drone[*].mobility.angleDelta = normal(0deg, 30deg)
**.drone[*].mobility.speed = truncnormal(15mps, 5mps)
**.drone[*].mobility.remainingBattery = 480
**.drone[*].mobility.weightCapacity = 25
#**.drone[*].mobility.parcelSelectionMethod = 4
**.drone[*].mobility.parcelSelectionMethod = 3
**.drone[*].mobility.initialX = 300m
**.drone[*].mobility.initialY = 200m
**.drone[*].mobility.initialZ = 0m



###(240615)###### 0.CDPF  1.CNPF  2. TSP_BnB  3.EPDS  4.RSPF 5.HPF  ##########
[Config RSPF]                 #Randomly Selected Parcel First 
network = ParcelDeliveryNetwork

description = "1 drones, 10 destinations, 100 parcels, "
*.numdrones = 1       # number of drones
**.drone*.mobility.typename = "DroneNetMob"
**.drone[*].mobility.ndst = 10   # number of destination
**.drone[*].mobility.nd = 8
**.drone[*].mobility.npar = 100  # number of parcels

**.drone[*].mobility.initFromDisplayString = false
**.drone[*].mobility.changeInterval = truncnormal(2s, 0.5s)
**.drone[*].mobility.angleDelta = normal(0deg, 30deg)
#**.drone[*].mobility.speed = truncnormal(15mps, 5mps)
**.drone[*].mobility.speed = 10mps
**.drone[*].mobility.remainingBattery = 480

# the Maximum delivery capacity of drone.   but for the realistic and various simulation, we can assume that drone have various capacity of delivery parcel weight.
#**.drone[*].mobility.weightCapacity = 25  
#Invalid value: But to run with 1 drone and navigate to all destinations. 0610 
*.drone[*].mobility.weightCapacity = 100
**.drone[*].mobility.parcelSelectionMethod = 4          
**.drone[*].mobility.initialX = 0m
**.drone[*].mobility.initialY = 0m
**.drone[*].mobility.initialZ = 0m




###(240615)###### 0.CDPF  1.CNPF  2. TSP_BnB  3.EPDS  4.RSPF 5.HPF  ##########
[Config HPF]                     #Efficient Parcel Delivery Service Bien Aime Configuration#
network = ParcelDeliveryNetwork

description = "1 drones, 10 destinations, 100 parcels, "
*.numdrones = 1
**.drone*.mobility.typename = "DroneNetMob"
**.drone[*].mobility.ndst = 10
**.drone[*].mobility.nd = 8
**.drone[*].mobility.npar = 100  # number of parcels


**.drone[*].mobility.initFromDisplayString = false
**.drone[*].mobility.changeInterval = truncnormal(2s, 0.5s)
**.drone[*].mobility.angleDelta = normal(0deg, 30deg)
**.drone[*].mobility.speed = truncnormal(15mps, 5mps)
**.drone[*].mobility.remainingBattery = 480
**.drone[*].mobility.weightCapacity = 25
**.drone[*].mobility.parcelSelectionMethod = 5
**.drone[*].mobility.initialX = 300m
**.drone[*].mobility.initialY = 200m
**.drone[*].mobility.initialZ = 0m





